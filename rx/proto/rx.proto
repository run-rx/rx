syntax = "proto3";

import 'google/protobuf/empty.proto';

package rx;

message Hardware {
  message Disks {
    message DiskSpec {
      string size = 1;
      string mount_point = 2;
      string source = 3;
    }
    string rxroot_size = 1;
    repeated DiskSpec other = 2;
  }
  string processor = 1;
  Disks disks = 2;
}

message Remote {
  message Image {
    string docker = 1;
    string tag = 2;
  }
  Image image = 1;
  Hardware hardware = 2;
  repeated int32 ports = 3;
}

message Python {
}

message Environment {
  Remote alloc = 1;
  Python python = 2 [deprecated = true];
  string sh = 3;
}

message Delta {
  repeated string add_path = 1;
  repeated string add_dir = 2;
  repeated string remove_path = 3;
}

message DockerImageProgress {
  string id = 1;
  string status = 2;
  int32 total = 3;
  int32 current = 4;
}

enum StatusCode {
  // google.rpc.Code-style
  OK = 0;
  UNKNOWN = 1;
  INVALID = 2;
  NOT_FOUND = 3;
  UNAUTHORIZED = 4;
  SUBSCRIPTION_REQUIRED = 5;
  // errno.h-style
  EAGAIN = 11;
  // HTTP-style.
  MOVED = 301;
}

message SubscribeInfo {
  string payment_link = 1;
}

message Result {
  StatusCode code = 1;
  string message = 2;
}

message RsyncSource {
  int64 machine_id = 1;
  string directory = 2;
  bytes public_key = 3;
}

message RsyncDestination {
  string daemon_module = 1;
}

// Requests and responses

// This just wraps Result in case an RPC wants to return more fields in the
// future.
message GenericResponse {
  Result result = 1;
}

message ExecRequest {
  string workspace_id = 1;
  repeated string argv = 2;
  RsyncSource rsync_source = 3 [deprecated = true];
  string cwd = 4;
  bytes stdin = 5;
}

message ExecResponse {
  Result result = 1;
  string execution_id = 2;
  bytes stdout = 3;
  bytes stderr = 4;
  repeated string output_files = 5;
  // The numeric code that the process exits with.
  int32 exit_code = 6;
}

message GetSubscribeInfoResponse {
  Result result = 1;
  SubscribeInfo subscribe_info = 2;
}

message GetUserResponse {
  Result result = 1;
  string username = 2;
}

message GetWorkspaceInfoRequest {
  string workspace_id = 2;
}

message GetWorkspaceInfoResponse {
  Result result = 1;
  string state = 2;
  bool has_gpu = 3;
}

message InitRequest {
  string project_name = 1;
  RsyncSource rsync_source = 2;
  Environment target_env = 3;
  bool force_subscribe = 4;
}

message InitResponse {
  Result result = 1;
  RsyncDestination rsync_dest = 2;
  string worker_addr = 3;
  string workspace_id = 4;
}

message InstallDepsRequest {
  string workspace_id = 1;
}

message InstallDepsResponse {
  Result result = 1;
  bytes stdout = 2;
}

message KillRequest {
  string workspace_id = 1;
  string execution_id = 2;
}

message UnfreezeRequest {
  string workspace_id = 1;
}

message UnfreezeResponse {
  Result result = 1;
  string worker_addr = 2;
}

message SetUsernameRequest {
  string username = 1;
}

message StopRequest {
  string workspace_id = 1;
  bool save = 2;
}

message StopResponse {
  Result result = 1;
  DockerImageProgress push_progress = 2;
}

message WorkerInitRequest {
  string workspace_id = 1;
}

message WorkerInitResponse {
  Result result = 1;
  DockerImageProgress pull_progress = 2;
}

service ExecutionService {
  rpc Init(WorkerInitRequest) returns (stream WorkerInitResponse) {}
  rpc InstallDeps(InstallDepsRequest) returns (stream InstallDepsResponse) {}
  rpc Exec(stream ExecRequest) returns (stream ExecResponse) {}
  rpc Kill(KillRequest) returns (google.protobuf.Empty) {}
}

service SetupService {
  rpc CheckSubscription(google.protobuf.Empty) returns (GenericResponse) {}
  rpc GetSubscribeInfo(google.protobuf.Empty)
    returns (GetSubscribeInfoResponse) {}
  rpc GetUser(google.protobuf.Empty) returns (GetUserResponse) {}
  rpc GetWorkspaceInfo(GetWorkspaceInfoRequest)
    returns (GetWorkspaceInfoResponse) {}
  rpc Init(InitRequest) returns (InitResponse) {}
  rpc Unfreeze(UnfreezeRequest) returns (stream UnfreezeResponse) {}
  rpc SetUsername(SetUsernameRequest) returns (GenericResponse) {}
  rpc Stop(StopRequest) returns (stream StopResponse) {}
  rpc Unsubscribe(google.protobuf.Empty) returns (GenericResponse) {}
}
